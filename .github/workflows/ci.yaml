name: Terraform CI/CD

on:
  push:
    # branches: [main, master]
    branches: [ci]
  pull_request:
    branches: [main]
  release:
    types: [published]

env:
  TF_VAR_latitude_auth_token: ${{ secrets.LATITUDESH_AUTH_TOKEN }}
  TF_VERSION: "1.12.0"
  TFLINT_VERSION: "v1.28.14"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v4
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Validate
        run: terraform validate
    
  lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Cache TFLint plugin dir
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      
      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}
      
      - name: Show TFLint version
        run: tflint --version

      - name: Initialize TFLint
        run: tflint --init
      
      - name: Run TFLint
        run: tflint -f compact
  
  security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run tfsec
        uses: tfsec/tfsec-action@v1.0.3
        with:
          soft_fail: true

  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - simple-server
          - server-with-provisioner-inline
          - server-with-provisioner-local-exec
          - server-with-provisioner-script
          - server-with-provisioner-scripts
          - server-with-multiple-provisioners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v4
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init - ${{ matrix.example }}
        working-directory: examples/${{ matrix.example }}
        run: terraform init

      - name: Terraform Plan - ${{ matrix.example }}
        working-directory: examples/${{ matrix.example }}
        run: terraform plan
        env:
          TF_VAR_latitude_auth_token: "fake-token-for-plan"